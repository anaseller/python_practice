01. Правильный многоугольник — выпуклый многоугольник,
у которого равны все стороны и все углы между смежными сторонами.
Площадь правильного многоугольника с длиной стороны a и количеством сторон n
вычисляется по формуле:

S = n * a^2 / (4 * tg(PI/n))

Даны два числа: натуральное число n и вещественное число a.
Напишите программу, которая находит площадь указанного правильного многоугольника.

Формат входных данных:
На вход программе подаётся два числа n и a.

Формат выходных данных:
Программа должна вывести вещественное число – площадь многоугольника.

Пример:
Число сторон: 5
Длина стороны: 3.5



02. Приближённое значение синуса можно вычислить по формуле Тейлора.

sin(x) = x - x^3/3! + x^5/5! - x^7/7! + x^9/9! - ...

Написать программу, которая
 - приблизительно вычисляет значение синуса от вводимого значения x;
 - оценивает погрешность вычисления с помощью этой формулы относительно настоящего значения,
        полученного при вызове нужной функции из библиотеки math.

Примечание: индексы в рядах начинаются с нуля


i = 0
while ...:
    sign = ...      # формула вычисления знака i-того элемента последовательности
    factorial = ... # формула факториала для i-того элемента последовательности
    term = ...      # формула вычисления самого i-того элемента последовательности




03. Напишите программу, которая запрашивает у пользователя натуральное число N
и вычисляет сумму первых N элементов следующей суммы:

1 - 1/3 + 1/5 - 1/7 +1/9


Выведите результат на экран с помощью команды print.
Используйте библиотеку decimal для вычисления суммы с большой точностью.

Пример вывода:

Введите натуральное число N: 1000
Сумма первых 1000 элементов ряда Лейбница: 0.785398163397448309615660845
                              Число pi/4 = 0.785398163397448278999490867


